solc successfully installed at: /root/.py-solc/solc-v0.4.25/bin/solc
==== Integer Overflow ====
SWC ID: 101
Severity: High
Contract: CertificationCentre
Function name: fallback
PC address: 1273
Estimated Gas Usage: 12686 - 53838
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: /tmp/40092.sol:64

totalBalance += amount

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: unknown, txdata: 0x01010101, value: 0x1
Caller: [CREATOR], function: unknown, txdata: 0x, value: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

==== Integer Overflow ====
SWC ID: 101
Severity: High
Contract: CertificationCentre
Function name: fallback
PC address: 1350
Estimated Gas Usage: 12686 - 53838
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: /tmp/40092.sol:65

payments[dest] += amount

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [ATTACKER], function: fixBalance(), txdata: 0x912de8de, value: 0x0
Caller: [ATTACKER], function: unknown, txdata: 0x, value: 0x1

==== External Call To Fixed Address ====
SWC ID: 107
Severity: Low
Contract: CertificationCentre
Function name: withdrawPayments()
PC address: 3236
Estimated Gas Usage: 11319 - 51980
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: /tmp/40092.sol:87

msg.sender.call.value(payment)()

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: registerCertificationDb(address), txdata: 0xb0fd935b00000000000000000000000001, value: 0x0
Caller: [CREATOR], function: withdrawPayments(), txdata: 0x6103d70b, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Medium
Contract: CertificationCentre
Function name: withdrawPayments()
PC address: 3236
Estimated Gas Usage: 11319 - 51980
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on the contract state.
--------------------
In file: /tmp/40092.sol:87

msg.sender.call.value(payment)()

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [ATTACKER], function: fixBalance(), txdata: 0x912de8de, value: 0x0
Caller: [ATTACKER], function: withdrawPayments(), txdata: 0x6103d70b, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Low
Contract: CertificationCentre
Function name: getCertificationDbAtIndex(uint256)
PC address: 3275
Estimated Gas Usage: 749 - 844
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: /tmp/40092.sol:204

certificationDbs[index]

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: registerCertificationDb(address), txdata: 0xb0fd935b00000000000000000000000002, value: 0x0
Caller: [ATTACKER], function: getCertificationDbAtIndex(uint256), txdata: 0x777feff580, value: 0x0

==== Integer Overflow ====
SWC ID: 101
Severity: High
Contract: CertificationCentre
Function name: fixBalance()
PC address: 4276
Estimated Gas Usage: 9293 - 30726
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: /tmp/40092.sol:99

payments[dest] += amount

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [SOMEGUY], function: fixBalance(), txdata: 0x912de8de, value: 0x0
Caller: [ATTACKER], function: fixBalance(), txdata: 0x912de8de, value: 0x0

