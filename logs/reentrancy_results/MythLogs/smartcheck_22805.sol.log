solc successfully installed at: /root/.py-solc/solc-v0.4.25/bin/solc
==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Medium
Contract: PowerCoin
Function name: eT(address,uint256,uint256)
PC address: 1960
Estimated Gas Usage: 11775 - 52816
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on the contract state.
--------------------
In file: /tmp/22805.sol:134

_pd.call.value(_etA)()

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [ATTACKER], function: eT(address,uint256,uint256), txdata: 0x07c299c2000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: PowerCoin
Function name: eT(address,uint256,uint256)
PC address: 1960
Estimated Gas Usage: 11775 - 52816
Anyone can withdraw ETH from the contract account.
Arbitrary senders other than the contract creator can withdraw ETH from the contract account without previously having sent an equivalent amount of ETH to it. This is likely to be a vulnerability.
--------------------
In file: /tmp/22805.sol:134

_pd.call.value(_etA)()

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [ATTACKER], function: eT(address,uint256,uint256), txdata: 0x07c299c2000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000000000000000000000000000000000000000000002, value: 0x0

==== Potential denial-of-service if block gas limit is reached ====
SWC ID: 128
Severity: Low
Contract: StandardToken
Function name: transferFrom(address,address,uint256)
PC address: 2274
Estimated Gas Usage: 12654 - 54269
Potential denial-of-service if block gas limit is reached.
A storage modification is executed in a loop. Be aware that the transaction may fail to execute if the loop is unbounded and the necessary gas exceeds the block gas limit.
--------------------
In file: /tmp/22805.sol:39

sAssert(b <= a)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [SOMEGUY], function: transferFrom(address,address,uint256), txdata: 0x23b872dd, value: 0x0
Caller: [ATTACKER], function: transferFrom(address,address,uint256), txdata: 0x23b872dd, value: 0x0

==== External Call To Fixed Address ====
SWC ID: 107
Severity: Low
Contract: PowerCoin
Function name: transferAnyERC20Token(address,uint256)
PC address: 3940
Estimated Gas Usage: 2224 - 3450
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: /tmp/22805.sol:159

ERC20(tokenAddress).transfer(owner, amount)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: transferAnyERC20Token(address,uint256), txdata: 0xdc39d06d, value: 0x0

==== Potential denial-of-service if block gas limit is reached ====
SWC ID: 128
Severity: Low
Contract: PowerCoin
Function name: transferFrom(address,address,uint256)
PC address: 4593
Estimated Gas Usage: 12698 - 54313
Potential denial-of-service if block gas limit is reached.
A storage modification is executed in a loop. Be aware that the transaction may fail to execute if the loop is unbounded and the necessary gas exceeds the block gas limit.
--------------------
In file: /tmp/22805.sol:39

sAssert(b <= a)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: transferFrom(address,address,uint256), txdata: 0x23b872dd, value: 0x0

