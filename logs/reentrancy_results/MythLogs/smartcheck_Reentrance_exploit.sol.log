solc successfully installed at: /root/.py-solc/solc-v0.4.25/bin/solc
==== External Call To Fixed Address ====
SWC ID: 107
Severity: Low
Contract: ReentranceExploit
Function name: fallback
PC address: 369
Estimated Gas Usage: 6731 - 28378
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: /tmp/Reentrance_exploit.sol:31

vulnerable_contract.call(bytes4(sha3("withdrawBalance()")))

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [SOMEGUY], function: launch_attack(), txdata: 0x4eb864ce, value: 0x0
Caller: [CREATOR], function: unknown, txdata: 0x01010102, value: 0x0

==== External Call To Fixed Address ====
SWC ID: 107
Severity: Low
Contract: ReentranceExploit
Function name: launch_attack()
PC address: 975
Estimated Gas Usage: 6227 - 27544
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: /tmp/Reentrance_exploit.sol:22

vulnerable_contract.call(bytes4(sha3("withdrawBalance()")))

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: launch_attack(), txdata: 0x4eb864ce, value: 0x0
Caller: [CREATOR], function: launch_attack(), txdata: 0x4eb864ce, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Medium
Contract: ReentranceExploit
Function name: launch_attack()
PC address: 975
Estimated Gas Usage: 6227 - 27544
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on the contract state.
--------------------
In file: /tmp/Reentrance_exploit.sol:22

vulnerable_contract.call(bytes4(sha3("withdrawBalance()")))

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [ATTACKER], function: deposit(address), txdata: 0xf340fa01bebebebebebebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: launch_attack(), txdata: 0x4eb864ce, value: 0x0

==== Unprotected Selfdestruct ====
SWC ID: 106
Severity: High
Contract: ReentranceExploit
Function name: get_money()
PC address: 1106
Estimated Gas Usage: 657 - 1082
The contract can be killed by anyone.
Arbitrary senders can kill this contract.
--------------------
In file: /tmp/Reentrance_exploit.sol:36

suicide(owner)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [ATTACKER], function: get_money(), txdata: 0xb8029269, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Medium
Contract: ReentranceExploit
Function name: deposit(address)
PC address: 1376
Estimated Gas Usage: 6358 - 27675
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on the contract state.
--------------------
In file: /tmp/Reentrance_exploit.sol:15

vulnerable_contract.call.value(msg.value)(bytes4(sha3("addToBalance()")))

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [ATTACKER], function: deposit(address), txdata: 0xf340fa01, value: 0x0
Caller: [ATTACKER], function: deposit(address), txdata: 0xf340fa01bebebebebebebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

