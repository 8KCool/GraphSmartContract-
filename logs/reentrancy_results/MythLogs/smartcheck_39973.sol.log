solc successfully installed at: /root/.py-solc/solc-v0.4.25/bin/solc
==== Integer Overflow ====
SWC ID: 101
Severity: High
Contract: AssetMin
Function name: setName(string)
PC address: 1828
Estimated Gas Usage: 17211 - 80548
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: /tmp/39973.sol:93

function setName(string _name) returns(bool) {
        if (bytes(name).length != 0) {
            return false;
        }
        name = _name;
        return true;
    }

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [SOMEGUY], function: setName(string), txdata: 0xc47f0027ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc, value: 0x0

==== Integer Overflow ====
SWC ID: 101
Severity: High
Contract: AssetMin
Function name: setName(string)
PC address: 1849
Estimated Gas Usage: 7071 - 30222
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: /tmp/39973.sol:93

function setName(string _name) returns(bool) {
        if (bytes(name).length != 0) {
            return false;
        }
        name = _name;
        return true;
    }

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [SOMEGUY], function: setName(string), txdata: 0xc47f002780, value: 0x0

==== External Call To Fixed Address ====
SWC ID: 107
Severity: Low
Contract: AssetMin
Function name: approve(address,uint256)
PC address: 2463
Estimated Gas Usage: 2124 - 3115
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: /tmp/39973.sol:148

multiAsset.proxyApprove(_spender, _value, symbol)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [SOMEGUY], function: approve(address,uint256), txdata: 0x095ea7b3, value: 0x0

==== External Call To Fixed Address ====
SWC ID: 107
Severity: Low
Contract: AssetMin
Function name: totalSupply()
PC address: 2687
Estimated Gas Usage: 1888 - 2689
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: /tmp/39973.sol:108

multiAsset.totalSupply(symbol)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [ATTACKER], function: setName(string), txdata: 0xc47f002780, value: 0x0
Caller: [ATTACKER], function: totalSupply(), txdata: 0x18160ddd, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Medium
Contract: AssetMin
Function name: totalSupply()
PC address: 2687
Estimated Gas Usage: 1888 - 2689
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on the contract state.
--------------------
In file: /tmp/39973.sol:108

multiAsset.totalSupply(symbol)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [ATTACKER], function: init(address,bytes32), txdata: 0x2cc0b254bebebebebebebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: totalSupply(), txdata: 0x18160ddd, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Medium
Contract: AssetMin
Function name: init(address,bytes32)
PC address: 3325
Estimated Gas Usage: 1697 - 2498
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on the contract state.
--------------------
In file: /tmp/39973.sol:85

ma.isCreated(_symbol)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [ATTACKER], function: init(address,bytes32), txdata: 0x2cc0b254bebebebebebebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== State change after external call ====
SWC ID: 107
Severity: Medium
Contract: AssetMin
Function name: init(address,bytes32)
PC address: 3459
Estimated Gas Usage: None - None
The contract account state is changed after an external call.
Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.
--------------------
In file: /tmp/39973.sol:88

multiAsset = ma

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: init(address,bytes32), txdata: 0x2cc0b254bebebebebebebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== State change after external call ====
SWC ID: 107
Severity: Medium
Contract: AssetMin
Function name: init(address,bytes32)
PC address: 3470
Estimated Gas Usage: None - None
The contract account state is changed after an external call.
Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.
--------------------
In file: /tmp/39973.sol:89

symbol = _symbol

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: init(address,bytes32), txdata: 0x2cc0b254bebebebebebebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== External Call To Fixed Address ====
SWC ID: 107
Severity: Low
Contract: AssetMin
Function name: decimals()
PC address: 3644
Estimated Gas Usage: 1976 - 2777
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: /tmp/39973.sol:169

multiAsset.baseUnit(symbol)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [SOMEGUY], function: decimals(), txdata: 0x313ce567, value: 0x0

==== External Call To Fixed Address ====
SWC ID: 107
Severity: Low
Contract: AssetMin
Function name: sendToOwner()
PC address: 3865
Estimated Gas Usage: 2001 - 2802
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: /tmp/39973.sol:164

multiAsset.owner(symbol)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [SOMEGUY], function: sendToOwner(), txdata: 0x6620a935, value: 0x0

==== External Call To Fixed Address ====
SWC ID: 107
Severity: Low
Contract: AssetMin
Function name: sendToOwner()
PC address: 4148
Estimated Gas Usage: 7128 - 77998
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: /tmp/39973.sol:165

multiAsset.transfer(owner, balanceOf(owner), symbol)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: sendToOwner(), txdata: 0x6620a935, value: 0x0

==== External Call To Fixed Address ====
SWC ID: 107
Severity: Low
Contract: AssetMin
Function name: sendToOwner()
PC address: 4421
Estimated Gas Usage: 5009 - 41127
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: /tmp/39973.sol:112

multiAsset.balanceOf(_owner, symbol)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [SOMEGUY], function: sendToOwner(), txdata: 0x6620a935, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: AssetMin
Function name: sendToOwner()
PC address: 4421
Estimated Gas Usage: 8018 - 113355
Multiple calls are executed in the same transaction.
This call is executed after a previous call in the same transaction. Try to isolate each call, transfer or send into its own transaction.
--------------------
In file: /tmp/39973.sol:112

multiAsset.balanceOf(_owner, symbol)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: sendToOwner(), txdata: 0x6620a935, value: 0x0

==== External Call To Fixed Address ====
SWC ID: 107
Severity: Low
Contract: AssetMin
Function name: setCosignerAddress(address)
PC address: 4767
Estimated Gas Usage: 2294 - 3190
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: /tmp/39973.sol:152

multiAsset.proxySetCosignerAddress(_cosigner, symbol)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [SOMEGUY], function: setCosignerAddress(address), txdata: 0x82fc49b8, value: 0x0

==== External Call To Fixed Address ====
SWC ID: 107
Severity: Low
Contract: AssetMin
Function name: allowance(address,address)
PC address: 5234
Estimated Gas Usage: 2361 - 3352
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: /tmp/39973.sol:116

multiAsset.allowance(_from, _spender, symbol)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [SOMEGUY], function: allowance(address,address), txdata: 0xdd62ed3e, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Low
Contract: GMT
Function name: checkForward(bytes)
PC address: 5302
Estimated Gas Usage: 556 - 3331
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: /tmp/39973.sol:379

_data[0]

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: checkForward(bytes), txdata: 0x119aa5c8, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Low
Contract: GMT
Function name: checkForward(bytes)
PC address: 5392
Estimated Gas Usage: 628 - 3589
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: /tmp/39973.sol:379

_data[1]

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: checkForward(bytes), txdata: 0x119aa5c880, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Low
Contract: GMT
Function name: checkForward(bytes)
PC address: 5482
Estimated Gas Usage: 700 - 3847
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: /tmp/39973.sol:379

_data[2]

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [ATTACKER], function: checkForward(bytes), txdata: 0x119aa5c880, value: 0x0

==== Potential denial-of-service if block gas limit is reached ====
SWC ID: 128
Severity: Low
Contract: AssetMin
Function name: transferToICAPWithReference(bytes32,uint256,string)
PC address: 5551
Estimated Gas Usage: 2538 - 7386
Potential denial-of-service if block gas limit is reached.
A message call is executed in a loop. Be aware that the transaction may fail to execute if the loop is unbounded and the necessary gas exceeds the block gas limit. This issue is reported for internal compiler generated code.
--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: transferToICAPWithReference(bytes32,uint256,string), txdata: 0x77fe38a40000000000000000000000000000000000000000000000000000000000000021, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Low
Contract: GMT
Function name: checkForward(bytes)
PC address: 5572
Estimated Gas Usage: 772 - 4105
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: /tmp/39973.sol:379

_data[3]

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [ATTACKER], function: checkForward(bytes), txdata: 0x119aa5c880, value: 0x0

==== External Call To Fixed Address ====
SWC ID: 107
Severity: Low
Contract: AssetMin
Function name: transferToICAPWithReference(bytes32,uint256,string)
PC address: 5652
Estimated Gas Usage: 2538 - 7386
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: /tmp/39973.sol:144

multiAsset.transferFromToICAPWithReference(msg.sender, _icap, _value, _reference)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: transferToICAPWithReference(bytes32,uint256,string), txdata: 0x77fe38a40000000000000000000000000000000000000000000000000000000000000021, value: 0x0

==== Potential denial-of-service if block gas limit is reached ====
SWC ID: 128
Severity: Low
Contract: AssetMin
Function name: transferToICAPWithReference(bytes32,uint256,string)
PC address: 5885
Estimated Gas Usage: 2508 - 7261
Potential denial-of-service if block gas limit is reached.
A message call is executed in a loop. Be aware that the transaction may fail to execute if the loop is unbounded and the necessary gas exceeds the block gas limit. This issue is reported for internal compiler generated code.
--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [SOMEGUY], function: transferToICAPWithReference(bytes32,uint256,string), txdata: 0x77fe38a40000000000000000000000000000000000000000000000000000000000000021, value: 0x0

==== External Call To Fixed Address ====
SWC ID: 107
Severity: Low
Contract: AssetMin
Function name: transferToICAPWithReference(bytes32,uint256,string)
PC address: 5985
Estimated Gas Usage: 2508 - 7261
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: /tmp/39973.sol:143

multiAsset.proxyTransferToICAPWithReference(_icap, _value, _reference)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [SOMEGUY], function: transferToICAPWithReference(bytes32,uint256,string), txdata: 0x77fe38a40000000000000000000000000000000000000000000000000000000000000021, value: 0x0

==== External Call To Fixed Address ====
SWC ID: 107
Severity: Low
Contract: GMT
Function name: totalSupply()
PC address: 6191
Estimated Gas Usage: 1976 - 2777
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: /tmp/39973.sol:108

multiAsset.totalSupply(symbol)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [ATTACKER], function: totalSupply(), txdata: 0x18160ddd, value: 0x0

==== Potential denial-of-service if block gas limit is reached ====
SWC ID: 128
Severity: Low
Contract: AssetMin
Function name: transferWithReference(address,uint256,string)
PC address: 6341
Estimated Gas Usage: 3055 - 7998
Potential denial-of-service if block gas limit is reached.
A message call is executed in a loop. Be aware that the transaction may fail to execute if the loop is unbounded and the necessary gas exceeds the block gas limit. This issue is reported for internal compiler generated code.
--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: transferWithReference(address,uint256,string), txdata: 0xac35caee0000000000000000000000000000000000000000000000000000000000000021, value: 0x0

==== External Call To Fixed Address ====
SWC ID: 107
Severity: Low
Contract: AssetMin
Function name: transferWithReference(address,uint256,string)
PC address: 6443
Estimated Gas Usage: 3055 - 7998
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: /tmp/39973.sol:130

multiAsset.transferFromWithReference(msg.sender, _to, _value, symbol, _reference)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: transferWithReference(address,uint256,string), txdata: 0xac35caee0000000000000000000000000000000000000000000000000000000000000021, value: 0x0

==== Potential denial-of-service if block gas limit is reached ====
SWC ID: 128
Severity: Low
Contract: AssetMin
Function name: transferWithReference(address,uint256,string)
PC address: 6729
Estimated Gas Usage: 3025 - 7873
Potential denial-of-service if block gas limit is reached.
A message call is executed in a loop. Be aware that the transaction may fail to execute if the loop is unbounded and the necessary gas exceeds the block gas limit. This issue is reported for internal compiler generated code.
--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [SOMEGUY], function: transferWithReference(address,uint256,string), txdata: 0xac35caee0000000000000000000000000000000000000000000000000000000000000021, value: 0x0

==== External Call To Fixed Address ====
SWC ID: 107
Severity: Low
Contract: AssetMin
Function name: transferWithReference(address,uint256,string)
PC address: 6830
Estimated Gas Usage: 3025 - 7873
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: /tmp/39973.sol:129

multiAsset.proxyTransferWithReference(_to, _value, symbol, _reference)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [SOMEGUY], function: transferWithReference(address,uint256,string), txdata: 0xac35caee0000000000000000000000000000000000000000000000000000000000000021, value: 0x0

==== Use of tx.origin ====
SWC ID: 111
Severity: Medium
Contract: AssetMin
Function name: approve(address,uint256)
PC address: 6899
Estimated Gas Usage: 296 - 391
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: /tmp/39973.sol:37

tx.origin

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [SOMEGUY], function: approve(address,uint256), txdata: 0x095ea7b3, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Medium
Contract: GMT
Function name: init(address,bytes32)
PC address: 7011
Estimated Gas Usage: 1851 - 2652
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on the contract state.
--------------------
In file: /tmp/39973.sol:85

ma.isCreated(_symbol)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [ATTACKER], function: init(address,bytes32), txdata: 0x2cc0b254bebebebebebebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Integer Overflow ====
SWC ID: 101
Severity: Low
Contract: AssetMin
Function name: setName(string)
PC address: 7019
Estimated Gas Usage: 7071 - 30222
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion. This issue is reported for internal compiler generated code.
--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: setName(string), txdata: 0xc47f002780, value: 0x0

==== Integer Overflow ====
SWC ID: 101
Severity: Low
Contract: AssetMin
Function name: setName(string)
PC address: 7033
Estimated Gas Usage: 7071 - 30222
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion. This issue is reported for internal compiler generated code.
--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: setName(string), txdata: 0xc47f002780, value: 0x0

==== Potential denial-of-service if block gas limit is reached ====
SWC ID: 128
Severity: Low
Contract: AssetMin
Function name: setName(string)
PC address: 7042
Estimated Gas Usage: 17025 - 80174
Potential denial-of-service if block gas limit is reached.
A storage modification is executed in a loop. Be aware that the transaction may fail to execute if the loop is unbounded and the necessary gas exceeds the block gas limit. This issue is reported for internal compiler generated code.
--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: setName(string), txdata: 0xc47f002780, value: 0x0

==== State change after external call ====
SWC ID: 107
Severity: Medium
Contract: GMT
Function name: init(address,bytes32)
PC address: 7145
Estimated Gas Usage: None - None
The contract account state is changed after an external call.
Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.
--------------------
In file: /tmp/39973.sol:88

multiAsset = ma

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [SOMEGUY], function: init(address,bytes32), txdata: 0x2cc0b254bebebebebebebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== State change after external call ====
SWC ID: 107
Severity: Medium
Contract: GMT
Function name: init(address,bytes32)
PC address: 7156
Estimated Gas Usage: None - None
The contract account state is changed after an external call.
Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.
--------------------
In file: /tmp/39973.sol:89

symbol = _symbol

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [SOMEGUY], function: init(address,bytes32), txdata: 0x2cc0b254bebebebebebebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== External Call To Fixed Address ====
SWC ID: 107
Severity: Low
Contract: GMT
Function name: decimals()
PC address: 7330
Estimated Gas Usage: 2130 - 2931
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: /tmp/39973.sol:169

multiAsset.baseUnit(symbol)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [ATTACKER], function: decimals(), txdata: 0x313ce567, value: 0x0

==== External Call To Fixed Address ====
SWC ID: 107
Severity: Low
Contract: GMT
Function name: sendToOwner()
PC address: 7817
Estimated Gas Usage: 2243 - 3044
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: /tmp/39973.sol:164

multiAsset.owner(symbol)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [ATTACKER], function: sendToOwner(), txdata: 0x6620a935, value: 0x0

==== External Call To Fixed Address ====
SWC ID: 107
Severity: Low
Contract: GMT
Function name: sendToOwner()
PC address: 8373
Estimated Gas Usage: 5251 - 41369
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: /tmp/39973.sol:112

multiAsset.balanceOf(_owner, symbol)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: sendToOwner(), txdata: 0x6620a935, value: 0x0

==== External Call To Fixed Address ====
SWC ID: 107
Severity: Low
Contract: GMT
Function name: allowance(address,address)
PC address: 9283
Estimated Gas Usage: 2845 - 3836
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: /tmp/39973.sol:116

multiAsset.allowance(_from, _spender, symbol)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [ATTACKER], function: allowance(address,address), txdata: 0xdd62ed3e, value: 0x0

==== External Call To Fixed Address ====
SWC ID: 107
Severity: Low
Contract: GMT
Function name: approve(address,uint256)
PC address: 10472
Estimated Gas Usage: 2660 - 3651
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: /tmp/39973.sol:148

multiAsset.proxyApprove(_spender, _value, symbol)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [SOMEGUY], function: approve(address,uint256), txdata: 0x095ea7b3, value: 0x0

==== External Call To Fixed Address ====
SWC ID: 107
Severity: Low
Contract: GMT
Function name: setupTreasury(address,uint256)
PC address: 10579
Estimated Gas Usage: 11616 - 52557
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: /tmp/39973.sol:33

_to.call.value(_value)()

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: setupTreasury(address,uint256), txdata: 0x3f2f1596000000000000000000000000000000000000000000000000000000000000000001, value: 0x1

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Medium
Contract: GMT
Function name: fallback
PC address: 10579
Estimated Gas Usage: 2375 - 6137
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on the contract state.
--------------------
In file: /tmp/39973.sol:33

_to.call.value(_value)()

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [ATTACKER], function: unknown, txdata: 0x01010101, value: 0x0

==== External Call To Fixed Address ====
SWC ID: 107
Severity: Low
Contract: GMT
Function name: checkSetCosignerAddress(address)
PC address: 10852
Estimated Gas Usage: 3242 - 4138
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: /tmp/39973.sol:152

multiAsset.proxySetCosignerAddress(_cosigner, symbol)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [SOMEGUY], function: checkSetCosignerAddress(address), txdata: 0xb623f5e5, value: 0x0

==== External Call To Fixed Address ====
SWC ID: 107
Severity: Low
Contract: GMT
Function name: transferToICAP(bytes32,uint256)
PC address: 11313
Estimated Gas Usage: 2874 - 4524
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: /tmp/39973.sol:144

multiAsset.transferFromToICAPWithReference(msg.sender, _icap, _value, _reference)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: transferToICAP(bytes32,uint256), txdata: 0x733480b7, value: 0x0

==== External Call To Fixed Address ====
SWC ID: 107
Severity: Low
Contract: GMT
Function name: checkTransferToICAPWithReference(bytes32,uint256,string)
PC address: 11646
Estimated Gas Usage: 2771 - 7429
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: /tmp/39973.sol:143

multiAsset.proxyTransferToICAPWithReference(_icap, _value, _reference)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [SOMEGUY], function: checkTransferToICAPWithReference(bytes32,uint256,string), txdata: 0x058026d00000000000000000000000000000000000000000000000000000000000000001, value: 0x0

==== Use of tx.origin ====
SWC ID: 111
Severity: Medium
Contract: GMT
Function name: approve(address,uint256)
PC address: 12576
Estimated Gas Usage: 832 - 927
Use of tx.origin is deprecated.
The smart contract retrieves the transaction origin (tx.origin) using msg.origin. Use of msg.origin is deprecated and the instruction may be removed in the  future. Use msg.sender instead.
See also: https://solidity.readthedocs.io/en/develop/security-considerations.html#tx-origin
--------------------
In file: /tmp/39973.sol:37

tx.origin

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [ATTACKER], function: approve(address,uint256), txdata: 0x095ea7b3, value: 0x0

