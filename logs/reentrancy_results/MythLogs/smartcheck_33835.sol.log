solc successfully installed at: /root/.py-solc/solc-v0.4.25/bin/solc
==== Integer Overflow ====
SWC ID: 101
Severity: High
Contract: multiowned
Function name: getOwner(uint256)
PC address: 2143
Estimated Gas Usage: 892 - 1268
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: /tmp/33835.sol:133

ownerIndex + 1

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: getOwner(uint256), txdata: 0xc41a360affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Low
Contract: multiowned
Function name: getOwner(uint256)
PC address: 2155
Estimated Gas Usage: 399 - 494
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: /tmp/33835.sol:133

m_owners[ownerIndex + 1]

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: getOwner(uint256), txdata: 0xc41a360a04, value: 0x0

==== Integer Overflow ====
SWC ID: 101
Severity: High
Contract: Wallet
Function name: getOwner(uint256)
PC address: 3981
Estimated Gas Usage: 936 - 1312
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: /tmp/33835.sol:133

ownerIndex + 1

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: getOwner(uint256), txdata: 0xc41a360affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Low
Contract: Wallet
Function name: getOwner(uint256)
PC address: 3993
Estimated Gas Usage: 443 - 538
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: /tmp/33835.sol:133

m_owners[ownerIndex + 1]

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: getOwner(uint256), txdata: 0xc41a360a04, value: 0x0

