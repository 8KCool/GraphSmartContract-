solc successfully installed at: /root/.py-solc/solc-v0.4.25/bin/solc
==== Potential denial-of-service if block gas limit is reached ====
SWC ID: 128
Severity: Low
Contract: EtherGet
Function name: getTokens(uint256,address)
PC address: 273
Estimated Gas Usage: 1925 - 70578
Potential denial-of-service if block gas limit is reached.
A message call is executed in a loop. Be aware that the transaction may fail to execute if the loop is unbounded and the necessary gas exceeds the block gas limit.
--------------------
In file: /tmp/25808.sol:19

for(uint i = 0; i < num; i++){
            addr.call.value(0 wei)();
        }

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: getTokens(uint256,address), txdata: 0x2570e31e01, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Medium
Contract: EtherGet
Function name: getTokens(uint256,address)
PC address: 314
Estimated Gas Usage: 1925 - 70578
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on the contract state.
--------------------
In file: /tmp/25808.sol:20

addr.call.value(0 wei)()

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [ATTACKER], function: getTokens(uint256,address), txdata: 0x2570e31e0101010101010101010101010101010101010101010101201020800101010107010101010101010101010101deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: EtherGet
Function name: getTokens(uint256,address)
PC address: 314
Estimated Gas Usage: 1894 - 70361
Multiple calls are executed in the same transaction.
This call is executed after a previous call in the same transaction. Try to isolate each call, transfer or send into its own transaction.
--------------------
In file: /tmp/25808.sol:20

addr.call.value(0 wei)()

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: getTokens(uint256,address), txdata: 0x2570e31e0000000000000000000000000000000000000000000000000000000000000002, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: EtherGet
Function name: getTokens(uint256,address)
PC address: 314
Estimated Gas Usage: 1894 - 70361
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: /tmp/25808.sol:20

addr.call.value(0 wei)()

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: getTokens(uint256,address), txdata: 0x2570e31e0000000000000000000000000000000000000000000000000000000000000002, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Medium
Contract: EtherGet
Function name: withdrawTokens(address)
PC address: 562
Estimated Gas Usage: 1522 - 2323
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on the contract state.
--------------------
In file: /tmp/25808.sol:13

tc.balanceOf(this)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [ATTACKER], function: withdrawTokens(address), txdata: 0x49df728cbebebebebebebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Medium
Contract: EtherGet
Function name: withdrawTokens(address)
PC address: 754
Estimated Gas Usage: 3181 - 38639
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on the contract state.
--------------------
In file: /tmp/25808.sol:13

tc.transfer(owner, tc.balanceOf(this))

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [ATTACKER], function: withdrawTokens(address), txdata: 0x49df728cbebebebebebebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: EtherGet
Function name: withdrawTokens(address)
PC address: 754
Estimated Gas Usage: 4006 - 73650
Multiple calls are executed in the same transaction.
This call is executed after a previous call in the same transaction. Try to isolate each call, transfer or send into its own transaction.
--------------------
In file: /tmp/25808.sol:13

tc.transfer(owner, tc.balanceOf(this))

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [SOMEGUY], function: withdrawTokens(address), txdata: 0x49df728c, value: 0x0

