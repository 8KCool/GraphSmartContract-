solc successfully installed at: /root/.py-solc/solc-v0.4.25/bin/solc
==== Integer Overflow ====
SWC ID: 101
Severity: High
Contract: ERC223Token
Function name: constructor
PC address: 91
Estimated Gas Usage: 28312 - 134987
The binary exponentiation can overflow.
The operands of the exponentiation operation are not sufficiently constrained. The exponentiation could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: /tmp/27159.sol:37

10 ** uint256(decimalUnits)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0

==== Integer Overflow ====
SWC ID: 101
Severity: High
Contract: ERC223Token
Function name: constructor
PC address: 93
Estimated Gas Usage: 28312 - 134987
The binary multiplication can overflow.
The operands of the multiplication operation are not sufficiently constrained. The multiplication could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: /tmp/27159.sol:37

initialSupply * 10 ** uint256(decimalUnits)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0

==== Potential denial-of-service if block gas limit is reached ====
SWC ID: 128
Severity: Low
Contract: ERC223Token
Function name: approveAndCall(address,uint256,bytes)
PC address: 3895
Estimated Gas Usage: 8769 - 34109
Potential denial-of-service if block gas limit is reached.
A message call is executed in a loop. Be aware that the transaction may fail to execute if the loop is unbounded and the necessary gas exceeds the block gas limit. This issue is reported for internal compiler generated code.
--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: approveAndCall(address,uint256,bytes), txdata: 0xcae9ca510000000000000000000000000000000000000000000000000000000000000021, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Medium
Contract: ERC223Token
Function name: approveAndCall(address,uint256,bytes)
PC address: 3995
Estimated Gas Usage: 8769 - 34109
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on the contract state.
--------------------
In file: /tmp/27159.sol:84

recip.receiveApproval( msg.sender, value, context )

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [ATTACKER], function: approveAndCall(address,uint256,bytes), txdata: 0xcae9ca51000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000000000000000000000000000000000000000000080, value: 0x0

==== Potential denial-of-service if block gas limit is reached ====
SWC ID: 128
Severity: Low
Contract: ERC223Token
Function name: transfer(address,uint256,bytes)
PC address: 5340
Estimated Gas Usage: 16973 - 62883
Potential denial-of-service if block gas limit is reached.
A message call is executed in a loop. Be aware that the transaction may fail to execute if the loop is unbounded and the necessary gas exceeds the block gas limit. This issue is reported for internal compiler generated code.
--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: transfer(address,uint256,bytes), txdata: 0xbe45fd6200000000000000000000000000000000000000000000000000000000000000212e, value: 0x0

==== External Call To Fixed Address ====
SWC ID: 107
Severity: Low
Contract: ERC223Token
Function name: transfer(address,uint256,bytes)
PC address: 5440
Estimated Gas Usage: 16973 - 62883
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: /tmp/27159.sol:140

rx.tokenFallback( msg.sender, value, data )

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: transfer(address,uint256,bytes), txdata: 0xbe45fd62000000000000000000000000000000000000000000000000000000000000002175, value: 0x0

