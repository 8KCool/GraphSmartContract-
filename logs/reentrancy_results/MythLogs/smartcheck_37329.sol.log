solc successfully installed at: /root/.py-solc/solc-v0.4.25/bin/solc
==== External Call To Fixed Address ====
SWC ID: 107
Severity: Low
Contract: ICOBuyer
Function name: withdrawTokens(address)
PC address: 1447
Estimated Gas Usage: 1572 - 2373
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: /tmp/37329.sol:127

token.balanceOf(address(this))

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: transferOwnership(address), txdata: 0xf2fde38bbebebebebebebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: withdrawTokens(address), txdata: 0x49df728c, value: 0x0

==== External Call To Fixed Address ====
SWC ID: 107
Severity: Low
Contract: ICOBuyer
Function name: withdrawTokens(address)
PC address: 1720
Estimated Gas Usage: 3722 - 39510
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: /tmp/37329.sol:131

token.transfer(owner, contractTokenBalance)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: transferOwnership(address), txdata: 0xf2fde38bbebebebebebebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: withdrawTokens(address), txdata: 0x49df728c, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ICOBuyer
Function name: withdrawTokens(address)
PC address: 1720
Estimated Gas Usage: 5372 - 75883
Multiple calls are executed in the same transaction.
This call is executed after a previous call in the same transaction. Try to isolate each call, transfer or send into its own transaction.
--------------------
In file: /tmp/37329.sol:131

token.transfer(owner, contractTokenBalance)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: withdrawTokens(address), txdata: 0x49df728c, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 120
Severity: Low
Contract: ICOBuyer
Function name: buyICO()
PC address: 3048
Estimated Gas Usage: 5119 - 40927
A control flow decision is made based on a predictable variable.
The block.number environment variable is used in to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables for random number generation or to make critical control flow decisions.
--------------------
In file: /tmp/37329.sol:138

if (getBlockNumber() < icoStartBlock) return;

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: buyICO(), txdata: 0xc59b5562, value: 0x0

==== External Call To Fixed Address ====
SWC ID: 107
Severity: Low
Contract: ICOBuyer
Function name: buyICO()
PC address: 3201
Estimated Gas Usage: 3567 - 4838
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: /tmp/37329.sol:143

crowdSale.call.value(purchaseAmount)()

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: transferOwnership(address), txdata: 0xf2fde38bbebebebebebebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: buyICO(), txdata: 0xc59b5562, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Low
Contract: ICOBuyer
Function name: buyICO()
PC address: 3212
Estimated Gas Usage: 4295 - 39566
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: /tmp/37329.sol:143

assert(crowdSale.call.value(purchaseAmount)())

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: transferOwnership(address), txdata: 0xf2fde38bbebebebebebebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: buyICO(), txdata: 0xc59b5562, value: 0x0

