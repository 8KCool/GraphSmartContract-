solc successfully installed at: /root/.py-solc/solc-v0.4.25/bin/solc
==== Potential denial-of-service if block gas limit is reached ====
SWC ID: 128
Severity: Low
Contract: ICOStartReservation
Function name: deposit(address)
PC address: 2328
Estimated Gas Usage: 10142 - 31607
Potential denial-of-service if block gas limit is reached.
A storage modification is executed in a loop. Be aware that the transaction may fail to execute if the loop is unbounded and the necessary gas exceeds the block gas limit.
--------------------
In file: /tmp/14579.sol:223

weiCollected.add(msg.value)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [ATTACKER], function: deposit(address), txdata: 0xf340fa0180808080808080808080808024, value: 0x0
Caller: [CREATOR], function: deposit(address), txdata: 0xf340fa0100000000000000000000000024, value: 0x0

==== External Call To Fixed Address ====
SWC ID: 107
Severity: Low
Contract: ICOStartReservation
Function name: pay()
PC address: 2703
Estimated Gas Usage: 3323 - 5019
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: /tmp/14579.sol:240

address(sale).call.value(netAmount)(this)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [ATTACKER], function: unknown, txdata: 0x01010103, value: 0x64
Caller: [CREATOR], function: pay(), txdata: 0x1b9265b8, value: 0x0

==== External Call To Fixed Address ====
SWC ID: 107
Severity: Low
Contract: ICOStartReservation
Function name: pay()
PC address: 2883
Estimated Gas Usage: 6980 - 77849
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: /tmp/14579.sol:241

getToken().balanceOf(this)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [SOMEGUY], function: deposit(address), txdata: 0xf340fa0100000000000000000000000001, value: 0x64
Caller: [CREATOR], function: pay(), txdata: 0x1b9265b8, value: 0x0

==== State change after external call ====
SWC ID: 107
Severity: Low
Contract: ICOStartReservation
Function name: pay()
PC address: 2944
Estimated Gas Usage: None - None
The contract account state is changed after an external call.
Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.
--------------------
In file: /tmp/14579.sol:241

tokensReceived = getToken().balanceOf(this)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, value: 0x1
Caller: [CREATOR], function: pay(), txdata: 0x1b9265b8, value: 0x0

==== External Call To Fixed Address ====
SWC ID: 107
Severity: Low
Contract: ICOStartReservation
Function name: destroy()
PC address: 3294
Estimated Gas Usage: 5946 - 76341
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: /tmp/14579.sol:201

sale.token()

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: transferOwnership(address), txdata: 0xf2fde38bbebebebebebebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeee, value: 0x0
Caller: [SOMEGUY], function: destroy(), txdata: 0x83197ef0, value: 0x0

==== External Call To Fixed Address ====
SWC ID: 107
Severity: Low
Contract: ICOStartReservation
Function name: destroy()
PC address: 4418
Estimated Gas Usage: 3845 - 39443
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: /tmp/14579.sol:276

getToken().balanceOf(this)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [SOMEGUY], function: deposit(address), txdata: 0xf340fa0100000000000000000000000001, value: 0x0
Caller: [CREATOR], function: destroy(), txdata: 0x83197ef0, value: 0x0

==== External Call To Fixed Address ====
SWC ID: 107
Severity: Low
Contract: ICOStartReservation
Function name: destroy()
PC address: 4692
Estimated Gas Usage: 8073 - 113455
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: /tmp/14579.sol:278

getToken().transfer(owner, myTokens)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: destroy(), txdata: 0x83197ef0, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Low
Contract: ICOStartReservation
Function name: deposit(address)
PC address: 5701
Estimated Gas Usage: 3854 - 4939
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: /tmp/14579.sol:101

assert(c >= a)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: deposit(address), txdata: 0xf340fa0140404040404040404040404040, value: 0x1
Caller: [ATTACKER], function: deposit(address), txdata: 0xf340fa0100000000000000000000000008, value: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

==== Exception State ====
SWC ID: 110
Severity: Low
Contract: ICOStartReservation
Function name: pay()
PC address: 5812
Estimated Gas Usage: 2719 - 3804
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: /tmp/14579.sol:94

assert(b <= a)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [SOMEGUY], function: deposit(address), txdata: 0xf340fa0100000000000000000000000001, value: 0x64
Caller: [CREATOR], function: pay(), txdata: 0x1b9265b8, value: 0x0
