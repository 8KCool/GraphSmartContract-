solc successfully installed at: /root/.py-solc/solc-v0.4.25/bin/solc
==== External Call To Fixed Address ====
SWC ID: 107
Severity: Low
Contract: BullTokenRefundVault
Function name: close()
PC address: 1063
Estimated Gas Usage: 8269 - 30312
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: /tmp/30460.sol:574

wallet.call.value(this.balance)()

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: deposit(address), txdata: 0xf340fa01, value: 0x0
Caller: [CREATOR], function: close(), txdata: 0x43d726d6, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: BullTokenRefundVault
Function name: close()
PC address: 1063
Estimated Gas Usage: 8989 - 65032
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: /tmp/30460.sol:574

wallet.call.value(this.balance)()

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: deposit(address), txdata: 0xf340fa01, value: 0x0
Caller: [CREATOR], function: close(), txdata: 0x43d726d6, value: 0x0

==== External Call To Fixed Address ====
SWC ID: 107
Severity: Low
Contract: BullTokenRefundVault
Function name: forwardFunds()
PC address: 1596
Estimated Gas Usage: 2010 - 2951
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: /tmp/30460.sol:579

wallet.call.value(this.balance)()

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: deposit(address), txdata: 0xf340fa01, value: 0x0
Caller: [CREATOR], function: forwardFunds(), txdata: 0x9d735286, value: 0x0

==== Unchecked Call Return Value ====
SWC ID: 104
Severity: Low
Contract: BullTokenRefundVault
Function name: forwardFunds()
PC address: 1596
Estimated Gas Usage: 2730 - 37671
The return value of a message call is not checked.
External calls return a boolean value. If the callee contract halts with an exception, 'false' is returned and execution continues in the caller. It is usually recommended to wrap external calls into a require statement to prevent unexpected states.
--------------------
In file: /tmp/30460.sol:579

wallet.call.value(this.balance)()

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: deposit(address), txdata: 0xf340fa01, value: 0x0
Caller: [CREATOR], function: forwardFunds(), txdata: 0x9d735286, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Low
Contract: RefundVault
Function name: deposit(address)
PC address: 2402
Estimated Gas Usage: 1885 - 2830
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: /tmp/30460.sol:389

assert(c >= a)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: deposit(address), txdata: 0xf340fa01, value: 0x1
Caller: [CREATOR], function: deposit(address), txdata: 0xf340fa01, value: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

==== Exception State ====
SWC ID: 110
Severity: Low
Contract: BullToken
Function name: holders(uint256)
PC address: 2593
Estimated Gas Usage: 702 - 797
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: /tmp/30460.sol:249

address [] public holders

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [ATTACKER], function: transferFrom(address,address,uint256), txdata: 0x23b872dd000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffe00000000000000000000000001, value: 0x0
Caller: [CREATOR], function: holders(uint256), txdata: 0x2a11ced080, value: 0x0


Exception ignored in: <bound method AstRef.__del__ of BitVec(256)>
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/z3/z3.py", line 303, in __del__
    def __del__(self):
KeyboardInterrupt
