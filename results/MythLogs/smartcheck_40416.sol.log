solc successfully installed at: /root/.py-solc/solc-v0.4.25/bin/solc
==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Medium
Contract: EtherDelta
Function name: withdraw(uint256)
PC address: 4075
Estimated Gas Usage: 6478 - 27519
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on the contract state.
--------------------
In file: /tmp/40416.sol:133

msg.sender.call.value(amount)()

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [ATTACKER], function: withdraw(uint256), txdata: 0x2e1a7d4d, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Medium
Contract: EtherDelta
Function name: depositToken(address,uint256)
PC address: 4605
Estimated Gas Usage: 1225 - 1886
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on the contract state.
--------------------
In file: /tmp/40416.sol:140

Token(token).transferFrom(msg.sender, this, amount)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [ATTACKER], function: depositToken(address,uint256), txdata: 0x338b5deabebebebebebebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== State change after external call ====
SWC ID: 107
Severity: Medium
Contract: EtherDelta
Function name: depositToken(address,uint256)
PC address: 4808
Estimated Gas Usage: None - None
The contract account state is changed after an external call.
Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.
--------------------
In file: /tmp/40416.sol:141

tokens[token][msg.sender] += amount

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: depositToken(address,uint256), txdata: 0x338b5deabebebebebebebebebebebebedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Medium
Contract: EtherDelta
Function name: withdrawToken(address,uint256)
PC address: 6133
Estimated Gas Usage: 7518 - 28844
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on the contract state.
--------------------
In file: /tmp/40416.sol:149

Token(token).transfer(msg.sender, amount)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [ATTACKER], function: withdrawToken(address,uint256), txdata: 0x9e281a98000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Low
Contract: EtherDelta
Function name: testTrade(address,uint256,address,uint256,uint256,uint256,address,uint8,bytes32,bytes32,uint256,address)
PC address: 7618
Estimated Gas Usage: 7583 - 78605
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: /tmp/40416.sol:198

tokens[tokenGive][user] * amountGet / amountGive

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: testTrade(address,uint256,address,uint256,uint256,uint256,address,uint8,bytes32,bytes32,uint256,address), txdata: 0x6c86888b, value: 0x0

