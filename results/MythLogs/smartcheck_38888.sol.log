solc successfully installed at: /root/.py-solc/solc-v0.4.25/bin/solc
==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: FunFairSale
Function name: fallback
PC address: 203
Estimated Gas Usage: 7606 - 27701
A control flow decision is made based on a predictable variable.
The block.timestamp environment variable is used in to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables for random number generation or to make critical control flow decisions.
--------------------
In file: /tmp/38888.sol:68

block.timestamp < startTime || block.timestamp >= deadline

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, value: 0x1

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: FunFairSale
Function name: fallback
PC address: 216
Estimated Gas Usage: 7606 - 27701
A control flow decision is made based on a predictable variable.
The block.timestamp environment variable is used in to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables for random number generation or to make critical control flow decisions.
--------------------
In file: /tmp/38888.sol:68

if (block.timestamp < startTime || block.timestamp >= deadline) throw

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, value: 0x1

==== Integer Overflow ====
SWC ID: 101
Severity: High
Contract: FunFairSale
Function name: fallback
PC address: 289
Estimated Gas Usage: 2593 - 2688
The binary addition can overflow.
The operands of the addition operation are not sufficiently constrained. The addition could therefore result in an integer overflow. Prevent the overflow by checking inputs or ensure sure that the overflow is caught by an assertion.
--------------------
In file: /tmp/38888.sol:70

this.balance + msg.value

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: unknown, txdata: 0x, value: 0xffffffffffffffffffffffffffffffffffffffffff989a386c05eff863000001

==== External Call To Fixed Address ====
SWC ID: 107
Severity: Low
Contract: TokenReceivable
Function name: claimTokens(address,address)
PC address: 660
Estimated Gas Usage: 1564 - 2365
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: /tmp/38888.sol:39

token.balanceOf(this)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: changeOwner(address), txdata: 0xa6f9dae1, value: 0x0
Caller: [CREATOR], function: claimTokens(address,address), txdata: 0x69ffa08a, value: 0x0

==== External Call To Fixed Address ====
SWC ID: 107
Severity: Low
Contract: TokenReceivable
Function name: claimTokens(address,address)
PC address: 884
Estimated Gas Usage: 3246 - 38704
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: /tmp/38888.sol:40

token.transfer(_to, balance)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: changeOwner(address), txdata: 0xa6f9dae1, value: 0x0
Caller: [CREATOR], function: claimTokens(address,address), txdata: 0x69ffa08a, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: TokenReceivable
Function name: claimTokens(address,address)
PC address: 884
Estimated Gas Usage: 5045 - 75697
Multiple calls are executed in the same transaction.
This call is executed after a previous call in the same transaction. Try to isolate each call, transfer or send into its own transaction.
--------------------
In file: /tmp/38888.sol:40

token.transfer(_to, balance)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: claimTokens(address,address), txdata: 0x69ffa08a, value: 0x0

==== External Call To Fixed Address ====
SWC ID: 107
Severity: Low
Contract: FunFairSale
Function name: withdraw()
PC address: 1096
Estimated Gas Usage: 1510 - 2451
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: /tmp/38888.sol:76

owner.call.value(this.balance)()

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: setStartTime(uint256,uint256), txdata: 0xba278e08, value: 0x0
Caller: [CREATOR], function: withdraw(), txdata: 0x3ccfd60b, value: 0x0

==== External Call To Fixed Address ====
SWC ID: 107
Severity: Low
Contract: FunFairSale
Function name: claimTokens(address,address)
PC address: 1587
Estimated Gas Usage: 1652 - 2453
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: /tmp/38888.sol:39

token.balanceOf(this)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: setStartTime(uint256,uint256), txdata: 0xba278e08, value: 0x0
Caller: [CREATOR], function: claimTokens(address,address), txdata: 0x69ffa08a, value: 0x0

==== External Call To Fixed Address ====
SWC ID: 107
Severity: Low
Contract: FunFairSale
Function name: claimTokens(address,address)
PC address: 1811
Estimated Gas Usage: 3334 - 38792
The contract executes an external message call.
An external function call to a fixed contract address is executed. Make sure that the callee contract has been reviewed carefully.
--------------------
In file: /tmp/38888.sol:40

token.transfer(_to, balance)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: setStartTime(uint256,uint256), txdata: 0xba278e08, value: 0x0
Caller: [CREATOR], function: claimTokens(address,address), txdata: 0x69ffa08a, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: FunFairSale
Function name: claimTokens(address,address)
PC address: 1811
Estimated Gas Usage: 5133 - 75785
Multiple calls are executed in the same transaction.
This call is executed after a previous call in the same transaction. Try to isolate each call, transfer or send into its own transaction.
--------------------
In file: /tmp/38888.sol:40

token.transfer(_to, balance)

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: claimTokens(address,address), txdata: 0x69ffa08a, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: FunFairSale
Function name: setStartTime(uint256,uint256)
PC address: 2544
Estimated Gas Usage: 11350 - 51775
A control flow decision is made based on a predictable variable.
The block.timestamp environment variable is used in to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables for random number generation or to make critical control flow decisions.
--------------------
In file: /tmp/38888.sol:84

if (block.timestamp >= startTime) throw

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: setStartTime(uint256,uint256), txdata: 0xba278e08, value: 0x0

