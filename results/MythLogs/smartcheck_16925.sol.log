solc successfully installed at: /root/.py-solc/solc-v0.4.25/bin/solc
==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Medium
Contract: PoormansHoneyPot
Function name: withdraw()
PC address: 338
Estimated Gas Usage: 681 - 1152
A call to a user-supplied address is executed.
The callee address of an external message call can be set by the caller. Note that the callee can contain arbitrary code and may re-enter any function in this contract. Review the business logic carefully to prevent averse effects on the contract state.
--------------------
In file: /tmp/16925.sol:15

msg.sender.call.value(balances[msg.sender])()

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [ATTACKER], function: withdraw(), txdata: 0x3ccfd60b, value: 0x0
Caller: [ATTACKER], function: withdraw(), txdata: 0x3ccfd60b, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Low
Contract: PoormansHoneyPot
Function name: withdraw()
PC address: 349
Estimated Gas Usage: 1409 - 35880
A reachable exception has been detected.
It is possible to trigger an exception (opcode 0xfe). Exceptions can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. Note that explicit `assert()` should only be used to check invariants. Use `require()` for regular input checking.
--------------------
In file: /tmp/16925.sol:15

assert(msg.sender.call.value(balances[msg.sender])())

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [CREATOR], function: withdraw(), txdata: 0x3ccfd60b, value: 0x0
Caller: [CREATOR], function: withdraw(), txdata: 0x3ccfd60b, value: 0x0

==== State change after external call ====
SWC ID: 107
Severity: Medium
Contract: PoormansHoneyPot
Function name: withdraw()
PC address: 417
Estimated Gas Usage: None - None
The contract account state is changed after an external call.
Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.
--------------------
In file: /tmp/16925.sol:16

balances[msg.sender] = 0

--------------------
Transaction Sequence:

Caller: [CREATOR], data: [CONTRACT CREATION], value: 0x0
Caller: [ATTACKER], function: withdraw(), txdata: 0x3ccfd60b, value: 0x0

